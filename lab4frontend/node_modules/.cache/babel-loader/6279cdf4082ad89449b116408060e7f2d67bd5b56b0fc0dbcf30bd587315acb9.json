{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"output-container\"\n};\nconst _hoisted_2 = {\n  class: \"output-table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"X\"), _createElementVNode(\"th\", null, \"Y\"), _createElementVNode(\"th\", null, \"R\"), _createElementVNode(\"th\", null, \"Result\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.points, (point, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(point.x), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(point.y), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(point.r), 1 /* TEXT */), _createElementVNode(\"td\", {\n      class: _normalizeClass({\n        success: point.result,\n        fail: !point.result\n      })\n    }, _toDisplayString(point.result ? 'True' : 'False'), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$props","points","point","index","key","_toDisplayString","x","y","r","_normalizeClass","success","result","fail"],"sources":["C:\\study\\labs\\web\\labwork4\\lab4frontend\\src\\components\\main_page_components\\Table.vue"],"sourcesContent":["<template>\r\n  <div class=\"output-container\">\r\n    <table class=\"output-table\">\r\n      <thead>\r\n      <tr>\r\n        <th>X</th>\r\n        <th>Y</th>\r\n        <th>R</th>\r\n        <th>Result</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(point, index) in points\" :key=\"index\">\r\n        <td>{{ point.x }}</td>\r\n        <td>{{ point.y }}</td>\r\n        <td>{{ point.r }}</td>\r\n        <td :class=\"{success: point.result, fail: !point.result}\">\r\n          {{ point.result ? 'True' : 'False' }}\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TableComponent\",\r\n  props: {\r\n    points: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.output-container {\r\n  border: 5px solid #178473;\r\n  grid-column-start: 2;\r\n  grid-column-end: 5;\r\n}\r\n\r\n.output-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n}\r\n\r\n.output-table th, .output-table td {\r\n  border: 1px solid #178473;\r\n  padding: 10px;\r\n  word-wrap: break-word;\r\n  white-space: normal;\r\n}\r\n\r\nthead th {\r\n  background-color: #178473;\r\n  color: white;\r\n}\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC;AAAc;;uBAD7BC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,CAmBQ,SAnBRC,UAmBQ,G,0BAlBND,mBAAA,CAOQ,gBANRA,mBAAA,CAKK,aAJHA,mBAAA,CAAU,YAAN,GAAC,GACLA,mBAAA,CAAU,YAAN,GAAC,GACLA,mBAAA,CAAU,YAAN,GAAC,GACLA,mBAAA,CAAe,YAAX,QAAM,E,wBAGZA,mBAAA,CASQ,iB,kBARRF,mBAAA,CAOKI,SAAA,QAnBXC,WAAA,CAYmCC,MAAA,CAAAC,MAAM,EAZzC,CAYkBC,KAAK,EAAEC,KAAK;yBAAxBT,mBAAA,CAOK;MAPiCU,GAAG,EAAED;IAAK,IAC9CP,mBAAA,CAAsB,YAAAS,gBAAA,CAAfH,KAAK,CAACI,CAAC,kBACdV,mBAAA,CAAsB,YAAAS,gBAAA,CAAfH,KAAK,CAACK,CAAC,kBACdX,mBAAA,CAAsB,YAAAS,gBAAA,CAAfH,KAAK,CAACM,CAAC,kBACdZ,mBAAA,CAEK;MAFAH,KAAK,EAhBlBgB,eAAA;QAAAC,OAAA,EAgB8BR,KAAK,CAACS,MAAM;QAAAC,IAAA,GAASV,KAAK,CAACS;MAAM;wBAClDT,KAAK,CAACS,MAAM,2C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}