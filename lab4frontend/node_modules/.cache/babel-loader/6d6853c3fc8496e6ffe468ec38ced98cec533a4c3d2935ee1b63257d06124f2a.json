{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from \"@/auth\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"RegisterPage\",\n  setup() {\n    const authStore = useAuthStore();\n    const router = useRouter();\n    const username = ref(\"\");\n    const password = ref(\"\");\n    const error = ref(null);\n    const handleRegister = async () => {\n      const result = await authStore.register({\n        username: username.value,\n        password: password.value\n      });\n      if (result.success) {\n        router.push(\"/login\");\n      } else {\n        error.value = result.message;\n      }\n    };\n    return {\n      username,\n      password,\n      error,\n      handleRegister\n    };\n  }\n};","map":{"version":3,"names":["useAuthStore","ref","useRouter","name","setup","authStore","router","username","password","error","handleRegister","result","register","value","success","push","message"],"sources":["C:\\study\\labs\\web\\labwork4\\lab4frontend\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <h2>Регистрация</h2>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div>\r\n        <label for=\"username\">Имя пользователя:</label>\r\n        <input type=\"text\" v-model=\"username\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Пароль:</label>\r\n        <input type=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <button type=\"submit\">Зарегистрироваться</button>\r\n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    </form>\r\n    <router-link to=\"/\">Уже есть аккаунт? Войти</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useAuthStore } from \"@/auth\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"RegisterPage\",\r\n  setup() {\r\n    const authStore = useAuthStore();\r\n    const router = useRouter();\r\n    const username = ref(\"\");\r\n    const password = ref(\"\");\r\n    const error = ref(null);\r\n\r\n    const handleRegister = async () => {\r\n      const result = await authStore.register({ username: username.value, password: password.value });\r\n      if (result.success) {\r\n        router.push(\"/login\");\r\n      } else {\r\n        error.value = result.message;\r\n      }\r\n    };\r\n\r\n    return { username, password, error, handleRegister };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":";AAoBA,SAASA,YAAW,QAAS,QAAQ;AACrC,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIL,YAAY,CAAC,CAAC;IAChC,MAAMM,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,KAAI,GAAIR,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMS,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,MAAMC,MAAK,GAAI,MAAMN,SAAS,CAACO,QAAQ,CAAC;QAAEL,QAAQ,EAAEA,QAAQ,CAACM,KAAK;QAAEL,QAAQ,EAAEA,QAAQ,CAACK;MAAM,CAAC,CAAC;MAC/F,IAAIF,MAAM,CAACG,OAAO,EAAE;QAClBR,MAAM,CAACS,IAAI,CAAC,QAAQ,CAAC;MACvB,OAAO;QACLN,KAAK,CAACI,KAAI,GAAIF,MAAM,CAACK,OAAO;MAC9B;IACF,CAAC;IAED,OAAO;MAAET,QAAQ;MAAEC,QAAQ;MAAEC,KAAK;MAAEC;IAAe,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}