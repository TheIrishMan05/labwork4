{"ast":null,"code":"export default {\n  name: 'CanvasComponent',\n  props: {\n    valueR: {\n      type: Number,\n      required: true\n    },\n    points: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      ctx: null,\n      canvas: null\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.draw();\n  },\n  watch: {\n    valueR: {\n      immediate: true,\n      handler() {\n        if (this.ctx) {\n          this.draw();\n        }\n      }\n    }\n  },\n  methods: {\n    draw() {},\n    handleClick(event) {\n      let area = this.canvas.getBoundingClientRect();\n      let rawX = event.clientX - area.left - this.canvas.width / 2;\n      let rawY = this.canvas.height / 2 - (event.clientY - area.top);\n      let valueX = rawX / (this.canvas.width / 2) * this.valueR * 1.75;\n      let valueY = rawY / (this.canvas.height / 2) * this.valueR * 1.75;\n      const dotX = this.canvas.width / 2 + rawX;\n      const dotY = this.canvas.height / 2 - rawY;\n      if (this.checkPoint(valueX, valueY, this.valueR)) {\n        this.ctx.fillStyle = \"green\";\n      } else {\n        this.ctx.fillStyle = \"red\";\n      }\n      this.ctx.beginPath();\n      this.ctx.arc(dotX, dotY, 3, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.closePath();\n    },\n    checkPoint(x, y, r) {\n      if (x >= 0 && y >= 0) {\n        return this.checkRectangle(x, y, r);\n      } else if (x <= 0 && y >= 0) {\n        return this.checkTriangle(x, y, r);\n      } else if (x <= 0 && y <= 0) {\n        return this.checkCircle(x, y, r);\n      } else {\n        return false;\n      }\n    },\n    checkTriangle(x, y, r) {\n      return y <= x / 2 - r && y <= r && x <= r / 2;\n    },\n    checkCircle(x, y, r) {\n      return x ** 2 + y ** 2 <= (r / 2) ** 2;\n    },\n    checkRectangle(x, y, r) {\n      return x <= r && y >= -r;\n    }\n  }\n};","map":{"version":3,"names":["name","props","valueR","type","Number","required","points","Array","data","ctx","canvas","mounted","$refs","getContext","draw","watch","immediate","handler","methods","handleClick","event","area","getBoundingClientRect","rawX","clientX","left","width","rawY","height","clientY","top","valueX","valueY","dotX","dotY","checkPoint","fillStyle","beginPath","arc","Math","PI","fill","closePath","x","y","r","checkRectangle","checkTriangle","checkCircle"],"sources":["C:\\study\\labs\\web\\labwork4\\lab4frontend\\src\\components\\main_page_components\\Canvas.vue"],"sourcesContent":["<template>\r\n  <div class=\"canvas-container\">\r\n    <canvas id=\"myCanvas\" ref=\"canvas\" height=\"350px\" width=\"350px\" @click=\"handleClick\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CanvasComponent',\r\n  props: {\r\n    valueR: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    points: {\r\n      type: Array,\r\n      required: true,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      canvas: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.canvas = this.$refs.canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.draw();\r\n  },\r\n  watch: {\r\n    valueR: {\r\n      immediate: true,\r\n      handler() {\r\n        if (this.ctx) {\r\n          this.draw();\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    draw() {\r\n      \r\n    },\r\n    handleClick(event) {\r\n      let area = this.canvas.getBoundingClientRect();\r\n\r\n      let rawX = event.clientX - area.left - this.canvas.width / 2;\r\n      let rawY = this.canvas.height / 2 - (event.clientY - area.top);\r\n\r\n      let valueX = (rawX / (this.canvas.width / 2) * this.valueR * 1.75);\r\n      let valueY = (rawY / (this.canvas.height / 2) * this.valueR * 1.75);\r\n\r\n      const dotX = this.canvas.width / 2 + rawX;\r\n      const dotY = this.canvas.height / 2 - rawY;\r\n\r\n      if (this.checkPoint(valueX, valueY, this.valueR)) {\r\n        this.ctx.fillStyle = \"green\";\r\n      } else {\r\n        this.ctx.fillStyle = \"red\";\r\n      }\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(dotX, dotY, 3, 0, 2 * Math.PI);\r\n      this.ctx.fill();\r\n      this.ctx.closePath();\r\n    },\r\n    checkPoint(x, y, r) {\r\n      if (x >= 0 && y >= 0) {\r\n        return this.checkRectangle(x, y, r);\r\n      } else if (x <= 0 && y >= 0) {\r\n        return this.checkTriangle(x, y, r);\r\n      } else if (x <= 0 && y <= 0) {\r\n        return this.checkCircle(x, y, r);\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    checkTriangle(x, y, r) {\r\n      return y <= (x / 2) - r && y <= r && x <= (r / 2);\r\n    },\r\n    checkCircle(x, y, r) {\r\n      return x ** 2 + y ** 2 <= (r / 2) ** 2;\r\n    },\r\n    checkRectangle(x, y, r) {\r\n      return x <= r && y >= -r;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.canvas-container {\r\n  width: 355px;\r\n  height: 355px;\r\n  border: 2px solid #178473;\r\n  border-radius: 20px;\r\n  background-color: white;\r\n  grid-column-start: 3;\r\n  grid-column-end: 4;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}